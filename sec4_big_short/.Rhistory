options(digits = 3)
library(tidyverse)
library(dslabs)
install.packages("dslabs")
library(dslabs)
data(death_prob)
head(death_prob)
View(death_prob)
death_prob[50,,]
death_prob[age=50]
which(death_prob$age=50)
which(death_prob$age=+50)
which(death_prob$age==50)
f50_ind <- which(death_prob$age = 50 & death_prob$sex = "Female")
p_f50 <- death_prob[f50_ind,]
f50_ind <- which(death_prob$age = "50" & death_prob$sex = "Female")
p_f50 <- death_prob[f50_ind,]
f50_ind <- which(death_prob$age = "50" & death_prob$sex = "Female")\
f50_ind <- which(death_prob$age == "50" & death_prob$sex == "Female")
p_f50 <- death_prob[f50_ind,]
f50_ind <- which(death_prob$age == "50" & death_prob$sex == "Female")
p_f50 <- death_prob$prob[f50_ind,]
f50_ind <- which(death_prob$age == "50" & death_prob$sex == "Female")
p_f50 <- death_prob$prob[f50_ind]
source('~/EDX/R Data Science/Probability/sec4_big_short/Ques_1.R')
EV
source('~/EDX/R Data Science/Probability/sec4_big_short/Ques_1.R')
se
source('~/EDX/R Data Science/Probability/sec4_big_short/Ques_1.R')
source('~/EDX/R Data Science/Probability/sec4_big_short/Ques_1.R')
se
source('~/EDX/R Data Science/Probability/sec4_big_short/Ques_1.R')
EV_all
se_all
pnorm(0, EV_all, se_all)
source('~/EDX/R Data Science/Probability/sec4_big_short/Ques_1.R')
source('~/EDX/R Data Science/Probability/sec4_big_short/Ques_2.R')
source('~/EDX/R Data Science/Probability/sec4_big_short/Ques_2.R')
b
source('~/EDX/R Data Science/Probability/sec4_big_short/Ques_2.R')
se
source('~/EDX/R Data Science/Probability/sec4_big_short/Ques_2.R')
se
pnorm(0,us, se)
source('~/EDX/R Data Science/Probability/sec4_big_short/Ques_3.R')
source('~/EDX/R Data Science/Probability/sec4_big_short/Ques_3.R')
evpan
source('~/EDX/R Data Science/Probability/sec4_big_short/Ques_3.R')
source('~/EDX/R Data Science/Probability/sec4_big_short/Ques_3.R')
source('~/EDX/R Data Science/Probability/sec4_big_short/Ques_3.R')
source('~/EDX/R Data Science/Probability/sec4_big_short/Ques_3.R')
source('~/EDX/R Data Science/Probability/sec4_big_short/Ques_3.R')
se
source('~/EDX/R Data Science/Probability/sec4_big_short/Ques_3.R')
se
se_pan
source('~/EDX/R Data Science/Probability/sec4_big_short/Ques_3.R')
prob_loss
source('~/EDX/R Data Science/Probability/sec4_big_short/Ques_3.R')
prob_losmil
source('~/EDX/R Data Science/Probability/sec4_big_short/Ques_3.R')
source('~/EDX/R Data Science/Probability/sec4_big_short/Ques_3.R')
source('~/EDX/R Data Science/Probability/sec4_big_short/Ques_3.R')
(p, tapply(p, score_30))
c(p, tapply(p, score_30))
tapply(p, score_30)
sapply(p, score_30)
source('~/EDX/R Data Science/Probability/sec4_big_short/Ques_3.R')
sapply(p, score_30)
sapply(score_3,p0)
sapply(score_3,p)
sapply(score_30,p)
source('~/EDX/R Data Science/Probability/sec4_big_short/Ques_3.R')
sapply(score_30,p)
sapply(score_3,p)
sapply(p, score_30)
p <- seq(0.25, 0.95, 0.05)
prob_die<-.25
prob_live<- 1-prob_die
payout <- -150000
prem <- 1150
n <- 1000
EV <- n*(payout*prob_die + prem*prob_live)
se <- sqrt(n) * (1)*sqrt(prob_live*prob_die)
print(1-pnorm(0, EV, se))
p <- seq(.01, .03, .001).
p <- seq(.01, .03, .001)
sapply(p, score_30)
prob_die<-.01
prob_live<- 1-prob_die
payout <- -150000
prem <- 1150
n <- 1000
EV <- n*(payout*prob_die + prem*prob_live)
se <- sqrt(n) * (1)*sqrt(prob_live*prob_die)
print(1-pnorm(0, EV, se))
prob_die<-.015
prob_live<- 1-prob_die
payout <- -150000
prem <- 1150
n <- 1000
EV <- n*(payout*prob_die + prem*prob_live)
se <- sqrt(n) * (1)*sqrt(prob_live*prob_die)
print(1-pnorm(0, EV, se))
source('~/EDX/R Data Science/Probability/sec4_big_short/Ques_3.R')
sapply(p, score_30)
source('~/EDX/R Data Science/Probability/sec4_big_short/Ques_3.R')
sapply(p, lose_prob)
source('~/EDX/R Data Science/Probability/sec4_big_short/Ques_3.R')
p <- seq(.01, .03, .0025)
sapply(p, lose_mil)
source('~/EDX/R Data Science/Probability/sec4_big_short/Ques_3.R')
sapply(p, lose_mil)
source('~/EDX/R Data Science/Probability/sec4_big_short/Ques_3.R')
payout <- -150000
prem <- 1150
n <- 1000
p_die <- .015
p_live <- 1-p_die
set.seed(25, sample.kind = "Rounding")
sum(sample(c(payout, prem),
n,
replace = T,
prob = c(prob_die,prob_live)))
source('~/EDX/R Data Science/Probability/sec4_big_short/Ques_4b.R')
source('~/EDX/R Data Science/Probability/sec4_big_short/Ques_4b.R')
source('~/EDX/R Data Science/Probability/sec4_big_short/Ques_4b.R')
source('~/EDX/R Data Science/Probability/sec4_big_short/Ques_4b.R')
source('~/EDX/R Data Science/Probability/sec4_big_short/Ques_5.R', encoding = 'UTF-8')
x
source('~/EDX/R Data Science/Probability/sec4_big_short/Ques_5.R', encoding = 'UTF-8')
x
source('~/EDX/R Data Science/Probability/sec4_big_short/Ques_5.R', encoding = 'UTF-8')
x
source('~/EDX/R Data Science/Probability/sec4_big_short/Ques_5.R', encoding = 'UTF-8')
EV
source('~/EDX/R Data Science/Probability/sec4_big_short/Ques_5.R', encoding = 'UTF-8')
source('~/EDX/R Data Science/Probability/sec4_big_short/Ques_5.R', encoding = 'UTF-8')
source('~/EDX/R Data Science/Probability/sec4_big_short/Ques_6.R', encoding = 'UTF-8')
p_die <- 0.015 + sample(seq(-0.01, 0.01, length = 100), 1)
p_die
p_die <- 0.015 + sample(seq(-0.01, 0.01, length = 100), 1)
p_die
p_die <- 0.015 + sample(seq(-0.01, 0.01, length = 100), 1)
p_die
source('~/EDX/R Data Science/Probability/sec4_big_short/Ques_6.R', encoding = 'UTF-8')
source('~/EDX/R Data Science/Probability/sec4_big_short/Ques_6.R', encoding = 'UTF-8')
mean(S)
S
source('~/EDX/R Data Science/Probability/sec4_big_short/Ques_4b.R')
source('~/EDX/R Data Science/Probability/sec4_big_short/Ques_6.R', encoding = 'UTF-8')
mean(S)
source('~/EDX/R Data Science/Probability/sec4_big_short/Ques_5.R', encoding = 'UTF-8')
x
source('~/EDX/R Data Science/Probability/sec4_big_short/Ques_6.R', encoding = 'UTF-8')
mean(S)
source('~/EDX/R Data Science/Probability/sec4_big_short/Ques_6.R', encoding = 'UTF-8')
mean(S)
mean(S>8)
source('~/EDX/R Data Science/Probability/sec4_big_short/Ques_6.R', encoding = 'UTF-8')
mean(S)
source('~/EDX/R Data Science/Probability/sec4_big_short/Ques_6.R', encoding = 'UTF-8')
mean(S)
source('~/EDX/R Data Science/Probability/sec4_big_short/Ques_6.R', encoding = 'UTF-8')
mean(S)
source('~/EDX/R Data Science/Probability/sec4_big_short/Ques_5.R', encoding = 'UTF-8')
EV
mean(S<0)
source('~/EDX/R Data Science/Probability/sec4_big_short/Ques_6.R', encoding = 'UTF-8')
mean(S<0)
mean(S<1000000)
mean(S<-1000000)
mean(S< -1000000)
S
source('~/EDX/R Data Science/Probability/sec4_big_short/Ques_6.R', encoding = 'UTF-8')
mean(S< -1000000)
